{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOufj6Q0Zv5V9e8EgwxV0OV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# Simulasi Tumpukan Barang dalam Gudang\n","# Pemain bertindak sebagai manajer gudang yang harus menyusun dan mengambil barang dengan aturan Last In, First Out (LIFO)\n","\n","class Gudang:\n","    def __init__(self, kapasitas):  # Inisialisasi gudang dengan kapasitas maksimal\n","        self.kapasitas = kapasitas  # Menyimpan kapasitas maksimal\n","        self.tumpukan = []  # List untuk menyimpan barang dalam gudang\n","\n","    def tambah_barang(self, barang):  # Metode untuk menambahkan barang ke gudang\n","        if len(self.tumpukan) < self.kapasitas:  # Mengecek apakah gudang masih memiliki ruang kosong\n","            self.tumpukan.append(barang)  # Menambahkan barang ke tumpukan (Stack: Push)\n","            print(f\"Barang '{barang}' ditambahkan ke gudang.\")  # Output konfirmasi\n","        else:\n","            print(\"Gudang sudah penuh, tidak bisa menambahkan barang.\")  # Pesan jika gudang penuh\n","\n","    def ambil_barang(self):  # Metode untuk mengambil barang terakhir dari gudang\n","        if self.tumpukan:  # Mengecek apakah masih ada barang dalam gudang\n","            barang = self.tumpukan.pop()  # Mengambil barang terakhir yang ditambahkan (Stack: Pop)\n","            print(f\"Barang '{barang}' diambil dari gudang.\")  # Output konfirmasi\n","        else:\n","            print(\"Gudang kosong, tidak ada barang yang bisa diambil.\")  # Pesan jika tidak ada barang\n","\n","    def tampilkan_gudang(self):  # Metode untuk menampilkan isi gudang\n","        if self.tumpukan:  # Mengecek apakah gudang tidak kosong\n","            print(\"Isi gudang saat ini:\", \" -> \".join(self.tumpukan))  # Menampilkan daftar barang dalam gudang\n","        else:\n","            print(\"Gudang kosong.\")  # Pesan jika gudang kosong\n","\n","# Menentukan kapasitas gudang berdasarkan dua digit terakhir NPM\n","kapasitas_gudang = 28  # Contoh: Jika dua digit terakhir NPM adalah 28\n","\n","# Membuat objek gudang dengan kapasitas yang ditentukan\n","gudang = Gudang(kapasitas_gudang)\n","\n","# Menambahkan beberapa barang ke gudang\n","gudang.tambah_barang(\"Laptop\")\n","gudang.tambah_barang(\"Monitor\")\n","gudang.tambah_barang(\"Keyboard\")\n","\n","# Menampilkan isi gudang\n","gudang.tampilkan_gudang()\n","\n","# Mengambil barang dari gudang\n","gudang.ambil_barang()\n","gudang.tampilkan_gudang()\n","\n","# Mengambil barang lagi\n","gudang.ambil_barang()\n","gudang.tampilkan_gudang()"],"metadata":{"id":"FrlARs-gY3DT","executionInfo":{"status":"ok","timestamp":1741246674347,"user_tz":-420,"elapsed":26,"user":{"displayName":"Assep Wahid","userId":"05595904825858952207"}},"outputId":"7d37e8dd-7fe8-4133-aa93-9dec2a7de189","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Barang 'Laptop' ditambahkan ke gudang.\n","Barang 'Monitor' ditambahkan ke gudang.\n","Barang 'Keyboard' ditambahkan ke gudang.\n","Isi gudang saat ini: Laptop -> Monitor -> Keyboard\n","Barang 'Keyboard' diambil dari gudang.\n","Isi gudang saat ini: Laptop -> Monitor\n","Barang 'Monitor' diambil dari gudang.\n","Isi gudang saat ini: Laptop\n"]}]}]}